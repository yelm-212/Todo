spring:
  datasource:
    url: ${DB_URL}
    username: root
    password: ${MYSQL_PASSWD}
  jpa:
    show-sql: true
    properties:
      hibernate:
        ddl-auto: update # Application 실행시 DB 초기화하지 않고 기존 저장되어 있던 DB를 사용
        format_sql: true
    defer-datasource-initialization: true
    profiles:
      include: create
  redis:
    host: localhost
    port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLI}
            client-secret: ${GOOGLE_KEY}
            scope:
              - email
              - profile
            redirect-uri: http://localhost:8080/oauth2/callback/google
          # TODO : Naver, Kakao settings
          naver:
            client-id: ${NAVER_CLI}
            client-secret: ${NAVER_KEY}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/oauth2/callback/naver
          kakao:
            client-id: ${KAKAO_CLI}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: http://localhost:8080/oauth2/callback/kakao
            authorization-grant-type: authorization_code
            scope:
              - account_email
              - profile_nickname
            client-name: Kakao
#            client-authentication-method: POST
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  issuer: test@example.com
  secret_key: study-springboot